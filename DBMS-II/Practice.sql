CREATE OR ALTER PROCEDURE WELCOME
AS
BEGIN
	PRINT 'WELCOME ALL'
END

EXEC WELCOME

CREATE OR ALTER PROCEDURE SP_WELCOME_USER2
@USERNAME VARCHAR(50)
AS
BEGIN
	PRINT 'WELCOME '+@USERNAME
END

EXEC SP_WELCOME_USER2'ABC'

select * from Department

CREATE OR ALTER PROCEDURE PR_DEPT_INS
@DEPT_ID INT,@DEPT_NAME VARCHAR(50)
AS
BEGIN
	INSERT INTO Department VALUES (@DEPT_ID,@DEPT_NAME)
END

EXEC PR_DEPT_INS @DEPT_NAME='AAASAAA',@DEPT_ID=11000

--FUNCTION

CREATE OR ALTER FUNCTION FN_HELLO_WORLD()
RETURNS VARCHAR(50)
AS
BEGIN
	RETURN 'HELLO WORLD'
END

SELECT DBO.FN_HELLO_WORLD()

CREATE OR ALTER FUNCTION FN_SUM
(
@NUM_1 INT,
@NUM_2 INT
)
RETURNS INT
AS
BEGIN
	DECLARE @NUM_3 INT
	SET @NUM_3=@NUM_1+@NUM_2
	RETURN @NUM_3
END

SELECT DBO.FN_SUM(10,20) AS SUM

CREATE OR ALTER PROCEDURE PR_SUM
@NUM_1 INT ,@NUM_2 INT
AS
BEGIN
	DECLARE @NUM_3 INT
	SET @NUM_3=@NUM_1+@NUM_2
	PRINT @NUM_3
END

EXEC PR_SUM 10,20

CREATE OR ALTER FUNCTION FN_LEN_STR(
@STR VARCHAR(50)
)
RETURNS INT
AS
BEGIN
	RETURN LEN(@STR)
END

SELECT DBO.FN_LEN_STR('ASDFG') AS LENGTH

CREATE OR ALTER FUNCTION FN_EVEN_ODD
(@NUM INT)
RETURNS VARCHAR(4)
AS
BEGIN
	DECLARE @MSG VARCHAR(4)

	IF @NUM%2=0
		SET @MSG='EVEN'
	ELSE
		SET @MSG='ODD'
	RETURN @MSG
END

SELECT DBO.FN_EVEN_ODD(90)

--PRINT 1 TO N NUMBER

CREATE OR ALTER FUNCTION FN_1_TO_N
()RETURNS INT
AS
BEGIN
	DECLARE @COUNT INT,@SUM INT
	SET @COUNT=1
	SET @SUM=0

	WHILE(@COUNT<=5)
		BEGIN
			SET @SUM=@SUM+@COUNT
			SET @COUNT=@COUNT+1
		END
	RETURN @SUM
END

SELECT DBO.FN_1_TO_N()

CREATE OR ALTER FUNCTION FN_CASE(@NUM INT)
RETURNS VARCHAR(10)
AS
BEGIN
	RETURN CASE
			WHEN @NUM=1 THEN 'SUN'
			WHEN @NUM=2 THEN 'MON'
			else 'not valid number'
			end
END

select dbo.FN_CASE(10)

CREATE OR ALTER FUNCTION FN_TABLE_VALUE
()
RETURNS TABLE
AS
	RETURN (SELECT *FROM Department)

SELECT * FROM DBO.FN_TABLE_VALUE()

--CURSOR

create table stu_mark(
	id int,
	stu_name varchar(50),
	sub_1 int,
	sub_2 int,
	sub_3 int,
);

INSERT INTO stu_mark (id, stu_name, sub_1, sub_2, sub_3) VALUES
(1, 'Amit Shah', 85, 90, 78),
(2, 'Priya Mehta', 76, 89, 95),
(3, 'Raj Patel', 65, 72, 80),
(4, 'Sneha Sharma', 90, 88, 92),
(5, 'Vikas Yadav', 55, 60, 58);


select * from stu_mark

ALTER TABLE stu_mark
ADD total_mark int;

update stu_mark
set total_mark=sub_1+sub_2+sub_3

DROP C_STU_MARK

DECLARE @sub_1 INT,@sub_2 INT,@sub_3 INT,@total Int;
--STEP-1
DECLARE C_STU_MARK CURSOR FOR 
SELECT SUB_1,SUB_2,SUB_3 FROM stu_mark

--STEP-2
OPEN C_STU_MARK

--STEP-3
FETCH NEXT FROM C_STU_MARK
INTO @sub_1,@sub_2,@sub_3;

WHILE @@FETCH_STATUS=0
BEGIN 
	set @total=@sub_1+@sub_2+@sub_3
	print @sub_1+'+'+@sub_2+'+'+@sub_3+'='+@total
	FETCH NEXT FROM C_STU_MARK
	INTO @sub_1,@sub_2,@sub_3
END

CLOSE C_STU_MARK

DEALLOCATE C_STU_MARK;

DECLARE @s1 INT, @s2 INT, @s3 INT, @total INT;

-- Cursor fetching columns into differently named variables
DECLARE C_STU_MARK CURSOR FOR 
SELECT sub_1, sub_2, sub_3 FROM stu_mark;

OPEN C_STU_MARK;
 
WHILE @@FETCH_STATUS = 0
BEGIN 
    -- Compute total using different variable names
    SET @total = @s1 + @s2 + @s3;

    -- Display result
    PRINT 'Marks: ' + CAST(@s1 AS VARCHAR) + ', ' + CAST(@s2 AS VARCHAR) + ', ' + CAST(@s3 AS VARCHAR) +
          ' | Total: ' + CAST(@total AS VARCHAR);

    FETCH NEXT FROM C_STU_MARK INTO @s1, @s2, @s3;
END;

CLOSE C_STU_MARK;
DEALLOCATE C_STU_MARK;
